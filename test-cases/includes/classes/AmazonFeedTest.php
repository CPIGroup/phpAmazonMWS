<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-12 at 13:17:14.
 */
class AmazonFeedTest extends PHPUnit_Framework_TestCase {

    /**
     * @var AmazonFeed
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->resetLog();
        $this->object = new AmazonFeed('BigKitchen', true);
        $this->object->setConfig('/var/www/athena/plugins/newAmazon/test-cases/test-config.php');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    /**
     * 
     */
    public function testSetFeedContent() {
        $ok = $this->object->setFeedContent('yes','/var/www/athena/plugins/newAmazon/test-cases/test-temp.xml');
        $this->assertNull($ok);
        $this->assertFileExists('/var/www/athena/plugins/newAmazon/test-cases/test-temp.xml');
        $check = file_get_contents('/var/www/athena/plugins/newAmazon/test-cases/test-temp.xml');
        $this->assertEquals($check, 'yes');
        $o = $this->object->getOptions();
        var_dump($o);
        
        $this->assertFalse($this->object->setFeedContent(null));
    }
    
    /**
     * Resets log for next test
     */
    protected function resetLog(){
        file_put_contents('log.txt','');
    }
    
    /**
     * gets the log contents
     */
    protected function getLog(){
        return file_get_contents('log.txt');
    }
    
    /**
     * gets log and returns messages in an array
     * @param string $s pre-fetched log contents
     * @return array list of message strings
     */
    protected function parseLog($s = null){
        if (!$s){
            $s = $this->getLog();
        }
        $temp = explode("\n",$s);
        
        $return = array();
        foreach($temp as $x){
            $tempo = explode('] ',$x);
            $return[] = trim($tempo[1]);
        }
        array_pop($return);
        return $return;
    }

}
